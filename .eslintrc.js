module.exports = {
    parser: 'babel-eslint',
    parserOptions: {
        ecmaVersion: 2017,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
            experimentalObjectRestSpread: true,
        }
    },
    rules: {
        indent: ['warn', 4, {
            SwitchCase: 1,
        }],
        curly: ['error', 'all'],
        semi: ['error', 'always'],
        'array-bracket-spacing': ['error', 'never'],
        'arrow-body-style': ['warn', 'as-needed'],
        'arrow-parens': ['warn', 'as-needed'],
        'arrow-spacing': ['error', {
            before: true,
            after: true,
        }],
        'brace-style': ['error', '1tbs', {
            allowSingleLine: true,
        }],
        'comma-dangle': ['warn', 'always-multiline'],
        'comma-spacing': ['warn', {
            before: false,
            after: true
        }],
        'comma-style': ['error', 'last'],
        'constructor-super': 'error',
        'computed-property-spacing': ['error', 'never'],
        'default-case': 'error',
        'dot-notation': 'error',
        'dot-location': ['error', 'property'],
        'eol-last': ['error', 'always'],
        'func-call-spacing': ['error', 'never'],
        'key-spacing': ['error', {
            beforeColon: false,
            afterColon: true,
            mode: 'strict',
        }],
        'keyword-spacing': ['error', {
            before: true,
            after: true,
            overrides: {
                return: {after: true},
                throw: {after: true},
                case: {after: true},
            },
        }],
        'linebreak-style': ['error', 'unix'],
        'max-len': ['warn', 120, 4, {
            ignoreUrls: true,
            ignoreRegExpLiterals: true,
            ignoreStrings: true,
            ignoreTemplateLiterals: true,
        }],
        'new-parens': 'error',
        'no-alert': 'warn',
        'no-caller': 'error',
        'no-case-declarations': 'error',
        'no-const-assign': 'error',
        'no-console': 'warn',
        'no-constant-condition': 'warn',
        'no-dupe-args': 'error',
        'no-dupe-class-members': 'error',
        'no-dupe-keys': 'error',
        'no-duplicate-case': 'error',
        'no-duplicate-imports': 'error',
        'no-empty': 'error',
        'no-else-return': 'error',
        'no-empty-function': ['warn', {allow: ['arrowFunctions']}],
        'no-empty-pattern': 'error',
        'no-eq-null': 'error',
        'no-eval': 'error',
        'no-extra-bind': 'error',
        'no-extra-label': 'error',
        'no-extra-semi': 'error',
        'no-fallthrough': ['error', {commentPattern: 'fallthrough'}],
        'no-global-assign': 'error',
        'no-implicit-coercion': ['error', {
            boolean: false,
            number: true,
            string: true,
            allow: [],
        }],
        'no-implicit-globals': 'error',
        'no-implied-eval': 'error',
        'no-invalid-this': 'error',
        'no-labels': ['error', {
            allowLoop: false,
            allowSwitch: false,
        }],
        'no-lone-blocks': 'error',
        'no-lonely-if': 'error',
        'no-loop-func': 'error',
        'no-mixed-spaces-and-tabs': 'error',
        'no-multi-spaces': 'error',
        'no-multi-str': 'error',
        'no-multiple-empty-lines': ['warn', {
            max: 2,
            maxEOF: 1,
        }],
        'no-new': 'error',
        'no-new-func': 'error',
        'no-new-wrappers': 'error',
        'no-script-url': 'error',
        'no-self-assign': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-throw-literal': 'error',
        'no-trailing-spaces': 'error',
        'no-unused-expressions': 'error',
        'no-useless-call': 'error',
        'no-useless-concat': 'error',
        'no-useless-escape': 'warn',
        'no-useless-return': 'warn',
        'no-unreachable': 'error',
        'no-unsafe-finally': 'error',
        'no-void': 'off', // we use `void 0`
        'no-with': 'error',
        'prefer-promise-reject-errors': 'off',
        strict: ['error', 'never'],
        'use-isnan': 'error',
        'valid-typeof': 'error',
        'wrap-iife': ['error', 'outside', {
            functionPrototypeMethods: false
        }],
        'import/no-amd': 'error',
        'import/first': 'error',
    },
    plugins: [
        "react",
        "import"
    ]
};
